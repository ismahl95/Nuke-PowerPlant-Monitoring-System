name: CI and SonarCloud

on:
  push:         # Este evento se activará en cualquier push
    branches:   # Para la rama main
      - 'main'  # Este patrón incluye la rama main
  pull_request: # Este evento se activará en cualquier pull request
    branches:   # Para todas las ramas
      - '**'    # Este patrón incluye todas las ramas

jobs:
  test: # Ejecución de los tests del backend
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Desactivar clones superficiales para análisis relevantes

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: mvn test
        working-directory: backend

  build: # Ejecución de la build del backend
    runs-on: ubuntu-latest
    needs: test  # Este job se ejecuta solo después de que 'test' finalice con éxito

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Build with Maven
        run: mvn clean install
        working-directory: backend

  jacoco: # Job para generar el reporte de cobertura de código con JaCoCo
    runs-on: ubuntu-latest
    needs: build  # Este job se ejecuta solo después de que 'build' finalice con éxito

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Generate JaCoCo coverage report
        run: mvn clean test jacoco:report
        working-directory: backend

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4  # Actualizado a la versión v4
        with:
          name: jacoco-report
          path: backend/target/site/jacoco/  # Ruta del reporte JaCoCo generado

  sonarcloud: # Análisis de SonarCloud
    runs-on: ubuntu-latest
    needs: jacoco  # Este job se ejecuta solo después de que 'jacoco' finalice con éxito

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Desactivar clones superficiales para análisis relevantes

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarCloud
        working-directory: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Necesario para obtener información de PR
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Token de SonarCloud almacenado en secrets
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ismahl95_Nuke-PowerPlant-Monitoring-System
